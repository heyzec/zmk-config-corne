/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LWR 1
#define RSE 2

#define BT(x) &bt BT_SEL x

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // │  TAB     │  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │  BSPC    │
                     &kp TAB    &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P      &kp BSPC
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // │  CTRL    │  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │  ; :     │  ' "     │
                     &kp LCTRL  &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L      &kp SEMI   &kp SQT
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // │  SHIFT   │  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │  , <     │  . >     │  / ?     │  ESC     │
                     &kp LSHFT  &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH   &kp ESC
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
                //                                  │  GUI     │  LOWER   │  SPACE   │   │  ENTER   │  RAISE   │  ALT     │
                                                      &kp LGUI   &mo LWR    &kp SPACE      &kp RET    &mo RSE    &kp RALT
                //                                  ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        lower_layer {
            bindings = <
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // │  TAB     │  1       │  2       │  3       │  4       │  5       │   │  6       │  7       │  8       │  9       │  0       │  BSPC    │
                     &kp TAB    &kp N1     &kp N2     &kp N3     &kp N4     &kp N5         &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &kp BSPC
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // │  BTCLR   │  BT1     │  BT2     │  BT3     │  BT4     │  BT5     │   │  LEFT    │  DOWN    │  UP      │  RIGHT   │          │          │
                    &bt BT_CLR  BT(0)      BT(1)      BT(2)      BT(3)      BT(4)          &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none      &none
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // │  SHIFT   │          │          │          │          │          │   │          │          │          │          │          │          │
                     &kp LSHFT  &none      &none      &none      &none      &none          &none      &none      &none      &none      &none      &none
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
                //                                  │          │          │          │   │          │          │          │
                                                      &none      &none      &none          &none      &none      &none
                //                                  ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        raise_layer {
            bindings = <
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // │  TAB     │  !       │  @       │  #       │  $       │  %       │   │  ^       │  &       │  *       │  (       │  )       │  BSPC    │
                     &kp TAB    &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR   &kp BSPC
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // │  CTRL    │          │          │          │          │          │   │  -       │  =       │  [       │  ]       │  \       │  `       │
                     &kp LCTRL  &none      &none      &none      &none      &none          &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT   &kp BSLH   &kp GRAVE
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // │  SHIFT   │          │          │          │          │          │   │  _       │  +       │  {       │  }       │  |       │  ~       │
                     &kp LSHFT  &none      &none      &none      &none      &none          &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC   &kp PIPE   &kp TILDE
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
                //                                  │          │          │          │   │          │          │          │
                                                      &none      &none      &none          &none      &none      &none
                //                                  ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };
    };
};

